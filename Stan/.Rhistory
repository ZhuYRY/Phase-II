knitr::opts_chunk$set(echo = TRUE)
options(digits=6)
library('rstan')
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
seed = 2021
iter = 1000
data_bin <- list(N = 100, y = 82)
fit_bin <- stan(file = 'beta_binom.stan', data = data_bin, iter = iter, seed = seed)
monitor(fit_bin)
draws <- as.data.frame(fit_bin)
hist(draws[,'theta'])
sum(draws$theta<=0.92)/nrow(draws)
#iter = 1000
data_bin_h <- list(N = 100, y = 95)
fit_bin_h <- stan(file = 'beta_binom.stan', data = data_bin, iter = iter, seed = seed)
#iter = 1000
data_bin_h <- list(N = 100, y = 95)
fit_bin_h <- stan(file = 'beta_binom.stan', data = data_bin_h, iter = iter, seed = seed)
draws_h <- as.data.frame(fit_bin_h)
sum(draws_h$theta<=0.92)/nrow(draws_h)
i
a = i+1
?for (variable in vector) {
}
82:95
for (i in 82:95) {
a = i+1
}
a
p = zeros(10)
p = zero(10)
?zero
??zero
p = zeros(10)
p = rep(0,95-81)
p
p[0]
p[1]
p = rep(0, 95-81)
for (i in 82:95) {
#a = i+1
data_bin = list(N = 100, y = i)
fit_bin = stan(file = 'beta_binom.stan', data = data_bin, iter = iter, seed = seed)
draws = as.data.frame(fit_bin)
p[i-81] = sum(draws$theta<=0.92)/nrow(draws)
}
p
plot(82:95, p)
plot(82:95, p, type="o", pch="o", lty=1, col="black",
xlab = "Number of Success (Y)",
ylab = "Probability",
main = "Posterior distribution of theta")
?abline
plot(82:95, p, type="o", pch="o", lty=1, col="black",
xlab = "Number of Success (Y)",
ylab = "Probability",
main = "Posterior distribution of theta")
abline(a = 0.92)
abline(a = 0.92, b = 0)
abline(h = 0.92)
plot(82:95, p, type="o", pch="o", lty=1, col="black",
xlab = "Number of Success (Y)",
ylab = "Probability",
main = "Posterior distribution of theta")
abline(h = 0.92)
abline(h = 0.92, col="red")
plot(82:95, p, type="o", pch="o", lty=1, col="black",
xlab = "Number of Success (Y)",
ylab = "Probability",
main = "Posterior distribution of theta")
abline(h = 0.92, col="red")
plot(82:95, p, type="o", pch="o", lty=1, col="black",
xlab = "Number of Success (Y)",
ylab = "Probability",
main = "Posterior distribution of theta")
axis(side = 1, at = seq(82, 95, by=1), las=2)
abline(h = 0.92, col="red")
plot(82:95, p, type="o", pch="o", lty=1, col="black",
xlab = "Number of Success (Y)",
ylab = "Probability",
main = "Posterior distribution of theta")
#axis(side = 1, at = seq(82, 95, by=1), las=2)
abline(h = 0.92, col="red")
plot(82:95, p, type="o", pch="o", lty=1, col="black",
xlab = "Number of Success (Y)",
ylab = "Probability",
main = "Posterior distribution of theta")
axis(side = 1, at = seq(82, 95, by=1), las=2)
abline(h = 0.92, col="red")
plot(82:95, p, type="o", pch="o", lty=1, col="black",
xlab = "Number of Success (Y)",
ylab = "Probability",
main = "Posterior distribution of theta")
axis(side = 1, at = seq(82, 95, by=1))#, las=2)
abline(h = 0.92, col="red")
p
p[88-1]
p[88-81]
p[89-81]
print("P|Y=88:", p[88-81])
p[89-81]
#p[89-81]
print("P|Y=88:", p[88-81])
#p[89-81]
?print()
paste("P|Y=88:", p[88-81])
paste("P|Y=89:", p[89-81])
paste("P|Y=88:", p[88-81])
paste("P|Y=89:", p[89-81])
plot(82:95, p, type="o", pch="o", lty=1, col="black",
xlab = "Number of Success (Y)",
ylab = "Probability",
main = "Posterior distribution of theta")
axis(side = 1, at = seq(82, 95, by=1))#, las=2)
abline(h = 0.92, col="red")
legend(x = "topright", legend=c("0.92"),
col=c("red"), lty=1, lwd=2, cex=0.75)
plot(82:95, p, type="o", pch="o", lty=1, col="black",
xlab = "Number of Success (Y)",
ylab = "Probability",
main = "Posterior distribution of theta")
axis(side = 1, at = seq(82, 95, by=1))#, las=2)
abline(h = 0.92, col="red")
legend(x = "topright", legend=c("0.92"),
col=c("red"), lty=1, lwd=2, cex=0.75)
| X = number of repairs	 | F = profit | Probability |
|------:|:-----|---------:|
| 0 | $100 | 0.90 |
| 1 | -$50 | 0.07 |
| 2 | -$200 | 0.02 |
| 3 | -$350 | 0.01 |
|Type of solid organ transplant and number of infections within 7 days after surgery|
0*0.9 + 1*0.07+3*0.01+2*0.02
knitr::opts_chunk$set(echo = TRUE)
I_w7/N
N = 405+150+308+81+58+101+76+68
I_w7 = 58+101+76+68
I_w7/N
N = 405+150+308+81+58+101+76+68
I_w7 = 58+101+76+68
paste("P(Infection within 7 days) =", I_w7/N)
p = (I_w7+150)/N
paste("P(Infection within 7 days OR Lung Transplant) =", p)
p = 101/(150+101)
paste("P(Infection within 7 days | Lung Transplant) =", p)
N = 405+150+308+81+58+101+76+68
I_w7 = 58+101+76+68
paste("P(Infection within 7 days) =", round(I_w7/N,4))
p = (I_w7+150)/N
paste("P(Infection within 7 days OR Lung Transplant) =", round(p,4))
p = 101/(150+101)
paste("P(Infection within 7 days | Lung Transplant) =", round(p,4))
paste("P(Lung Transplant | Infection within 7 days) =", round(p,4))
p = 101/I_w7
paste("P(Lung Transplant | Infection within 7 days) =", round(p,4))
0.75*0.25
X = c(1,1,1,1)
Y = c(0,1,0,1)
(X-0.75)*(Y-0.5)
sum((X-0.75)*(Y-0.5))/4
X = c(1,1,1,1)
Y = c(0,1,0,1)
cov(X,Y)
#sum((X-0.75)*(Y-0.5))/4
cor(X,Y)
X = c(1,1,1,1)
Y = c(0,1,0,1)
cov_xy = sum((X-0.75)*(Y-0.5))/4
cor_xy = cox_xy/(sqrt(0.75*0.25)*sqrt(0.5*0.5))
X = c(1,1,1,1)
Y = c(0,1,0,1)
cov_xy = sum((X-0.75)*(Y-0.5))/4
cor_xy = cov_xy/(sqrt(0.75*0.25)*sqrt(0.5*0.5))
paste("Cov(X,Y)=",cov_xy)
paste("Cor(X,Y)=",cor_xy)
mtcars
mean(mtcars$hp)
paste("E[H] =",mean(mtcars$hp))
summary(mtcars$cyl)
mtcars[mtcars$cyl==4]
mtcars[mtcars$cyl=='4']
typeof(mtcars)
mtcars$cyl=='4'
mtcars$hp[mtcars$cyl=='4']
paste("E[H|C=4]",mean(mtcars$hp[mtcars$cyl=='4']))
paste("E[H|C=4]",round(mean(mtcars$hp[mtcars$cyl=='4']),3))
paste("E[H|C=4]",round(mean(mtcars$hp[mtcars$cyl=='4']),3))
paste("E[H|C=6]",round(mean(mtcars$hp[mtcars$cyl=='6']),3))
paste("E[H|C=8]",round(mean(mtcars$hp[mtcars$cyl=='8']),3))
fit_c = glm(hp ~ cyl, data=mtcars)
fit_c = glm(hp ~ cyl, data=mtcars)
fit_c
fit_c$coefficients
fit_c = glm(hp ~ cyl, data=mtcars)
fit_c$coefficients[0]
fit_c = glm(hp ~ cyl, data=mtcars)
fit_c$coefficients[1]
fit_c = glm(hp ~ cyl, data=mtcars)
fit_c$coefficients[2]
fit_c
fit_c = glm(hp ~ cyl, data=mtcars)
#fit_c$coefficients[2]
H_C4 = fit_c$coefficients[1]+fit_c$coefficients[2]*4
H_C4
fit_c$coefficients[2][1]
fit_c$coefficients[[2]]
fit_c = glm(hp ~ cyl, data=mtcars)
#fit_c$coefficients[2]
H_C4 = fit_c$coefficients[[1]]+fit_c$coefficients[[2]]*4
H_C4
fit_c = glm(hp ~ cyl, data=mtcars)
#fit_c$coefficients[2]
H_C4 = fit_c$coefficients[[1]]+fit_c$coefficients[[2]]*4
H_C6 = fit_c$coefficients[[1]]+fit_c$coefficients[[2]]*6
H_C8 = fit_c$coefficients[[1]]+fit_c$coefficients[[2]]*8
paste("E[H|C=4]",round(H_C4,3))
paste("E[H|C=6]",round(H_C6,3))
paste("E[H|C=8]",round(H_C8,3))
summary(mtcars$mpg)
fit_d
fit_d = glm(hp ~ cyl + mpg, data=mtcars)
fit_d
knitr::opts_chunk$set(echo = TRUE)
library("MASS")
library("ggplot2")
?ggplot
cats
ggplot(cats, aes(x=Bwt, y=Hwt))
ggplot(data=cats, aes(x=Bwt, y=Hwt))
ggplot(cats)
ggplot(cats)
ggplot(data=cats, aes(x=Bwt, y=Hwt)) + geom_point()
ggplot(data=cats) + geom_point(aes(x=Bwt, y=Hwt))
cor(cats$Bwt, cats$Hwt)
cor(cats$Bwt, cats$Hwt)
cor.test(cats$Bwt, cats$Hwt)
fit_c
fit_c = glm(Hwt~Bwt, data = cats)
fit_c
fit_c$residuals
#fit_c$residuals
residuals(fit_c)
#fit_c$residuals
#residuals(fit_c)
summary(fit_c$residuals)
#fit_c$residuals
#residuals(fit_c)
sd(fit_c$residuals)
#fit_c$residuals
#residuals(fit_c)
var(fit_c$residuals)
#fit_c$residuals
#residuals(fit_c)
sqrt(var(fit_c$residuals))
rm(list = ls())
# Produce scatterplot (ggplot)
# install.packages("ggplot2")
library(ggplot2)
# Add corr coef and p-value in ggplot (stat_cor)
# install.packages("ggpubr")
library(ggpubr)
# x: education / y: salary
x = c(9, 10, 12, 12, 14, 15, 16, 16, 17, 22)
y = c(11, 19, 28, 49, 25, 33, 18, 44, 54, 105)
dat = data.frame(x = x, y = y)
t(dat)
# Scatter plot
ggplot(data = dat, aes(x = x, y = y)) + geom_point() +
geom_smooth(method='lm',formula = y ~ x, se = TRUE, color = "red") +
stat_cor(method = "pearson", size = 6, label.x = 10, label.y = 90) + theme_bw() +
ggtitle("Scatter plot") + theme(plot.title = element_text(hjust = 0.5))
# Correlation coefficient (linearity check)
cor.test(dat$x, dat$y)
ggplot(data=cats) +
geom_point(aes(x=Bwt, y=Hwt)) +
geom_smooth(method='lm',formula = y ~ x, se = TRUE, color = "red") +
stat_cor(method = "pearson", size = 6, label.x = 10, label.y = 90) +
theme_bw() +
ggtitle("Scatter plot") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=cats) +
geom_point(aes(x=Bwt, y=Hwt)) +
geom_smooth(method='lm',formula = Hwt ~ Bwt, se = TRUE, color = "red") +
stat_cor(method = "pearson", size = 6, label.x = 10, label.y = 90) +
theme_bw() +
ggtitle("Scatter plot") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data = dat, aes(x = x, y = y)) + geom_point() +
geom_smooth(method='lm',formula = y ~ x, se = TRUE, color = "red") +
stat_cor(method = "pearson", size = 6, label.x = 10, label.y = 90) + theme_bw() +
ggtitle("Scatter plot") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=cats) +
geom_point(aes(x=Bwt, y=Hwt)) +
#geom_smooth(method='lm',formula = Hwt ~ Bwt, se = TRUE, color = "red") +
stat_cor(method = "pearson", size = 6, label.x = 10, label.y = 90) +
theme_bw() +
ggtitle("Scatter plot") + theme(plot.title = element_text(hjust = 0.5))
library("MASS")
library("ggplot2")
ggplot(data=cats) +
geom_point(aes(x=Bwt, y=Hwt)) +
#geom_smooth(method='lm',formula = Hwt ~ Bwt, se = TRUE, color = "red") +
stat_cor(method = "pearson", size = 6, label.x = 10, label.y = 90) +
theme_bw() +
ggtitle("Scatter plot") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=cats) +
geom_point(aes(x=Bwt, y=Hwt)) +
ggtitle("Scatter plot") + theme(plot.title = element_text(hjust = 0.5))
fit_c = lm(Hwt~Bwt, data = cats)
fit_c
fit_c = glm(Hwt~Bwt, data = cats)
summary(fit_c)
fit_c = lm(Hwt~Bwt, data = cats)
summary(fit_c)
ggplot(data=cats) +
geom_point(aes(x=Bwt, y=Hwt)) +
ggtitle("Scatter plot of Bwt vs. Hwt") + theme(plot.title = element_text(hjust = 0.5))
anova(fit_c)
shapiro.test(residuals(fit_c))
